package com.greggs.utils;import com.greggs.config.TestConfig;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import java.util.List;public class CookieConsentHandler {    private WebDriver driver;    private TestConfig config;    public CookieConsentHandler(WebDriver driver, TestConfig config) {        this.driver = driver;        this.config = config;    }    public boolean isCookieBannerPresent() {        try {            List<WebElement> cookieElements = driver.findElements(By.cssSelector(                    "[class*='cookie'], [id*='cookie'], [class*='consent'], [id*='consent']"            ));            return !cookieElements.isEmpty();        } catch (Exception e) {            return false;        }    }    public void acceptCookiesIfPresent() {        try {            if (isCookieBannerPresent()) {                // Try to find and click accept button                List<WebElement> acceptButtons = driver.findElements(By.cssSelector(                        "button[class*='accept'], button[class*='agree'], " +                                "[class*='cookie'] button, [class*='consent'] button"                ));                for (WebElement button : acceptButtons) {                    if (button.isDisplayed() && button.isEnabled()) {                        button.click();                        System.out.println("Cookie consent accepted");                        break;                    }                }            }        } catch (Exception e) {            System.out.println("Could not handle cookie consent: " + e.getMessage());        }    }}