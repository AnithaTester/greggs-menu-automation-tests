package com.greggs.utils;import com.fasterxml.jackson.databind.ObjectMapper;import java.io.InputStream;import java.util.List;import java.util.Map;public class JsonDataLoader {    public static <T> List<T> loadList(String resourcePath, Class<T> clazz) {        try {            ObjectMapper mapper = new ObjectMapper();            InputStream is = JsonDataLoader.class.getClassLoader().getResourceAsStream(resourcePath);            return mapper.readValue(is, mapper.getTypeFactory().constructCollectionType(List.class, clazz));        } catch (Exception e) {            throw new RuntimeException("Failed to load JSON data: " + resourcePath, e);        }    }    public static List<Map<String, Object>> loadListOfMaps(String resourcePath) {        try {            ObjectMapper mapper = new ObjectMapper();            InputStream is = JsonDataLoader.class.getClassLoader().getResourceAsStream(resourcePath);            return mapper.readValue(is, mapper.getTypeFactory().constructCollectionType(List.class, Map.class));        } catch (Exception e) {            throw new RuntimeException("Failed to load JSON data: " + resourcePath, e);        }    }}